-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.conductor
(
    id serial NOT NULL,
    nombre character varying(40) COLLATE pg_catalog."default" NOT NULL,
    apellido1 character varying(40) COLLATE pg_catalog."default" NOT NULL,
    apellido2 character varying(40) COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    nif character varying(12) COLLATE pg_catalog."default" NOT NULL,
    fecha_alta date NOT NULL,
    fecha_baja date,
    CONSTRAINT conductor_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.doctrine_migration_versions
(
    version character varying(191) COLLATE pg_catalog."default" NOT NULL,
    executed_at timestamp(0) without time zone DEFAULT NULL::timestamp without time zone,
    execution_time integer,
    CONSTRAINT doctrine_migration_versions_pkey PRIMARY KEY (version)
    );

CREATE TABLE IF NOT EXISTS public.localidad
(
    id serial NOT NULL,
    nombre character varying(40) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT localidad_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.messenger_messages
(
    id bigserial NOT NULL,
    body text COLLATE pg_catalog."default" NOT NULL,
    headers text COLLATE pg_catalog."default" NOT NULL,
    queue_name character varying(190) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp(0) without time zone NOT NULL,
    available_at timestamp(0) without time zone NOT NULL,
    delivered_at timestamp(0) without time zone DEFAULT NULL::timestamp without time zone,
    CONSTRAINT messenger_messages_pkey PRIMARY KEY (id)
    );

COMMENT ON COLUMN public.messenger_messages.created_at
    IS '(DC2Type:datetime_immutable)';

COMMENT ON COLUMN public.messenger_messages.available_at
    IS '(DC2Type:datetime_immutable)';

COMMENT ON COLUMN public.messenger_messages.delivered_at
    IS '(DC2Type:datetime_immutable)';

CREATE TABLE IF NOT EXISTS public.paciente
(
    id serial NOT NULL,
    id_localidad_id integer NOT NULL,
    nombre character varying(40) COLLATE pg_catalog."default" NOT NULL,
    apellido1 character varying(40) COLLATE pg_catalog."default" NOT NULL,
    apellido2 character varying(40) COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    email character varying(40) COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    telefono integer NOT NULL,
    telefono2 integer,
    dni character varying(12) COLLATE pg_catalog."default" NOT NULL,
    es_socio boolean NOT NULL,
    codigo character varying(10) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT paciente_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.tarifa_espera
(
    id serial NOT NULL,
    inicio_vigencia date NOT NULL,
    fin_vigencia date,
    precio_hora double precision NOT NULL,
    CONSTRAINT tarifa_espera_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.tarifa_km
(
    id serial NOT NULL,
    inicio_vigencia date NOT NULL,
    fin_vigencia date,
    precio_km double precision NOT NULL,
    CONSTRAINT tarifa_km_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.usuario
(
    id serial NOT NULL,
    login character varying(180) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email character varying(40) COLLATE pg_catalog."default" NOT NULL DEFAULT NULL::character varying,
    es_admin boolean NOT NULL,
    roles json NOT NULL,
    CONSTRAINT usuario_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.viaje
(
    id serial NOT NULL,
    id_paciente_id integer NOT NULL,
    id_conductor_id integer NOT NULL,
    id_tarifa_km_id integer NOT NULL,
    id_tarifa_espera_id integer,
    id_localidad_id integer NOT NULL,
    fecha date NOT NULL,
    es_ida_vuelta boolean NOT NULL,
    valoracion character varying(255) COLLATE pg_catalog."default" NOT NULL,
    comentarios character varying(600) COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    num_kilometros double precision NOT NULL,
    importe_distancia double precision NOT NULL,
    horas_espera double precision,
    importe_espera double precision,
    importe_total double precision NOT NULL,
    CONSTRAINT viaje_pkey PRIMARY KEY (id)
    );

ALTER TABLE IF EXISTS public.paciente
    ADD CONSTRAINT fk_c6cba95e44b109fb FOREIGN KEY (id_localidad_id)
    REFERENCES public.localidad (id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_c6cba95e44b109fb
    ON public.paciente(id_localidad_id);


ALTER TABLE IF EXISTS public.viaje
    ADD CONSTRAINT fk_1d41ed1644b109fb FOREIGN KEY (id_localidad_id)
    REFERENCES public.localidad (id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_1d41ed1644b109fb
    ON public.viaje(id_localidad_id);


ALTER TABLE IF EXISTS public.viaje
    ADD CONSTRAINT fk_1d41ed166b021723 FOREIGN KEY (id_paciente_id)
    REFERENCES public.paciente (id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_1d41ed166b021723
    ON public.viaje(id_paciente_id);


ALTER TABLE IF EXISTS public.viaje
    ADD CONSTRAINT fk_1d41ed167a1ca62b FOREIGN KEY (id_tarifa_espera_id)
    REFERENCES public.tarifa_espera (id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_1d41ed167a1ca62b
    ON public.viaje(id_tarifa_espera_id);


ALTER TABLE IF EXISTS public.viaje
    ADD CONSTRAINT fk_1d41ed16875c9982 FOREIGN KEY (id_conductor_id)
    REFERENCES public.conductor (id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_1d41ed16875c9982
    ON public.viaje(id_conductor_id);


ALTER TABLE IF EXISTS public.viaje
    ADD CONSTRAINT fk_1d41ed16944d03db FOREIGN KEY (id_tarifa_km_id)
    REFERENCES public.tarifa_km (id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_1d41ed16944d03db
    ON public.viaje(id_tarifa_km_id);

END;